/**
 * Font Faces
 */
@font-face {
	font-family: "Quicksand";
	font-weight: 500;
	font-style: normal;
	src: url(".../assets/fonts/Quicksand-Medium.ttf") format("truetype");
}

@font-face {
	font-family: "Quicksand";
	font-weight: 600;
	font-style: normal;
	src: url(".../assets/fonts/Quicksand-SemiBold.ttf") format("truetype");
}

/**
 * SASS/SCSS Variables
 */
$colorGrey: #6e6e6e;
$colorDark: #303030;

/**
 * General Styling
 */
* {
	font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto,
		"Helvetica Neue", Arial, Helvetica, sans-serif, "Apple Color Emoji",
		"Segoe UI Emoji", "Segoe UI Symbol";
}

body {
	font-size: 1rem;
	font-weight: 400;
	line-height: 1.5;
	height: 100%;
}

p {
	margin: 1rem 0;
}

h1,
h2,
h3,
h4,
h5,
h6 {
	margin-bottom: 0.5rem;
	font-family: inherit;
	font-weight: 500;
	line-height: 1.2;
	color: inherit;
}

h1 {
	font-size: 2.25rem;
}

/**
 * Scrollbar Styling
 */

/* Firefox only */
* {
	scrollbar-width: thin;
	scrollbar-color: $colorGrey $colorDark;
}

/* Chrome/Edge/Safari */
*::-webkit-scrollbar {
	width: 0.6rem;
}

*::-webkit-scrollbar-track {
	background: $colorDark;
}

*::-webkit-scrollbar-thumb {
	background-color: $colorGrey;
	border: 0.075rem solid $colorDark;
}

/**
 * Class Attribute Styling
 *
 * styled-components take precedence over global classes,
 * as they inject styles during runtime at the end of <head> by default.
 *
 * Therefore, we need to add !important to our styling properties, to ensure
 * the style is used. Another approach is bumping up the specificity of the selectors
 * by writing them twice. (e.g. .no-margin.no-margin {...})
 */
.center-text {
	text-align: center !important;
}

.no-margin {
	margin: 0 !important;
}

.align-left {
	margin-right: auto !important;
}

.align-right {
	margin-left: auto !important;
}

.align-center {
	margin-left: auto !important;
	margin-right: auto !important;
}

.uppercase {
	text-transform: uppercase !important;
}

.hidden {
	display: none !important;
}

/* Span the element over the entire screen width */
.full-width {
	position: relative !important;
	width: 100vw !important;
	left: calc(-50vw + 50%) !important;
}
